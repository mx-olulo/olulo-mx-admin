# Lightweight pipeline for small changes and hotfixes
version: 1
name: lightweight-code-pipeline
description: "Fast pipeline for small, low-risk changes"

stages:
  # Quick coordination for small changes
  - id: quick_coordination
    agent: coordinator
    inputs:
      required: [goal, scope]
      optional: [related_docs, constraints]
    outputs: [risk_level, required_experts, execution_strategy]
    conditions:
      always: true

  # Code authoring with streamlined inputs
  - id: authoring
    agent: code-author
    inputs:
      required: [goal, scope]
      optional: [related_docs, constraints, files_changed]
      from_stage: quick_coordination
      map:
        execution_strategy: execution_strategy
    outputs: [patch, summary, checklist]
    conditions:
      always: true

  # Conditional expert review (only one most relevant)
  - id: primary_expert_review
    agent: "{dynamic_agent}"  # Selected by coordinator based on change type
    inputs:
      from_stage: authoring
      map:
        patch: patch
        summary: summary
    outputs: [expert_review]
    conditions:
      when_risk_level: ["medium", "high"]
    agent_selection:
      php_files: "laravel-expert"
      js_files: "react-expert"
      css_files: "tailwind-expert"
      docs_files: "docs-reviewer"
      migration_files: "database-expert"
      filament_files: "filament-expert"
      nova_files: "nova-expert"
      livewire_files: "livewire-expert"
      github_files: "github-expert"
      default: "code-reviewer"

  # Fast review for low-risk changes
  - id: quick_review
    agent: code-reviewer
    inputs:
      from_stage: [quick_coordination, authoring, primary_expert_review]
      map:
        patch: patch
        checklist: checklist
        risk_level: risk_level
        expert_review: expert_review
    outputs: [review_report, decision, actions]
    conditions:
      always: true

  # GitHub operations (only if approved)
  - id: github_ops
    agent: github-expert
    inputs:
      from_stage: quick_review
      map:
        decision: decision
        actions: actions
        review_report: review_report
    outputs: [branch, commits, pr_link]
    conditions:
      when_decision: ["approve"]

policy:
  merge_strategy: pr
  branch_naming:
    hotfix: "hotfix/{short}"
    fix: "fix/{short}"
    chore: "chore/{short}"
  mandatory_rules:
    - require_pint: true
    - require_larastan: false  # Skip for hotfixes
    - enforce_naming_consistency: true
  performance:
    max_execution_time: 120  # 2 minutes
    skip_heavy_analysis: true
    cache_aggressive: true

# Triggers for this pipeline
triggers:
  file_count_max: 5
  line_changes_max: 100
  scope_keywords: ["hotfix", "typo", "minor", "quick", "small"]
  exclude_patterns: ["database/migrations/**", "config/**"]

notes:
  - "Use for small, low-risk changes that need fast turnaround"
  - "Automatically selects most relevant expert based on file changes"
  - "Skips heavy analysis for performance"
  - "Maximum 2 minute execution time"