name: Phase2 Quality Checks

on:
  push:
    branches:
      - main
      - develop
      - 'feature/**'
  pull_request:
    branches:
      - main
      - develop

jobs:
  quality:
    name: Code Quality & Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version: ['8.3']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.head_ref }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, json, bcmath, redis
          coverage: none

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Setup Nova authentication
        run: composer config http-basic.nova.laravel.com "${{ secrets.NOVA_USERNAME }}" "${{ secrets.NOVA_LICENSE_KEY }}"

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Validate composer.json
        run: composer validate --strict

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Create .env file
        run: |
          cp .env.example .env
          php artisan key:generate

      - name: Create Vite manifest for tests
        run: |
          mkdir -p public/build
          cat > public/build/manifest.json << 'EOF'
          {
            "resources/css/app.css": {
              "file": "assets/app.css",
              "src": "resources/css/app.css"
            },
            "resources/css/customer-app.css": {
              "file": "assets/customer-app.css",
              "src": "resources/css/customer-app.css"
            },
            "resources/js/app.js": {
              "file": "assets/app.js",
              "src": "resources/js/app.js"
            },
            "resources/js/auth-login.js": {
              "file": "assets/auth-login.js",
              "src": "resources/js/auth-login.js"
            },
            "resources/js/customer-app.tsx": {
              "file": "assets/customer-app.js",
              "src": "resources/js/customer-app.tsx"
            }
          }
          EOF

      - name: Run Laravel Pint (Code Style)
        run: |
          vendor/bin/pint
          if [ -n "$(git status --porcelain)" ]; then
            git config --local user.email "github-actions[bot]@users.noreply.github.com"
            git config --local user.name "github-actions[bot]"
            git add -A
            git commit -m "style: Apply Laravel Pint fixes [skip ci]"
            git push
          fi

      - name: Run PHPStan (Static Analysis)
        run: php -d memory_limit=-1 vendor/bin/phpstan analyse --error-format=github

      - name: Run Tests (Excluding Firebase)
        run: php artisan test --exclude-group=firebase
        env:
          APP_ENV: testing
          DB_CONNECTION: sqlite
          DB_DATABASE: ':memory:'

  security:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, xml, ctype, iconv, intl
          coverage: none

      - name: Setup Nova authentication
        run: composer config http-basic.nova.laravel.com "${{ secrets.NOVA_USERNAME }}" "${{ secrets.NOVA_LICENSE_KEY }}"

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Security Audit (Composer)
        run: composer audit

      - name: Check for known security vulnerabilities
        run: |
          if composer show -D | grep -E 'laravel/framework.*v11\.|laravel/framework.*v12\.'; then
            echo "✅ Laravel version is up-to-date"
          else
            echo "⚠️  Laravel version may be outdated"
          fi
